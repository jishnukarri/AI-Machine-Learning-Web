<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>OceanGuard AI - Waste Recognition System</title>
  
  <!-- Google Fonts -->
  <link rel="preconnect" href="https://fonts.googleapis.com">
  <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
  <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500;600;700&family=Roboto:wght@300;400;500&family=Roboto+Mono&display=swap" rel="stylesheet">
  
  <style>
    /* Reset and Base Styles */
    *, *::before, *::after {
      box-sizing: border-box;
      margin: 0;
      padding: 0;
    }
    
    :root {
      --dark1: #2C3E50;
      --light1: #F0F8FF;
      --dark2: #1ABC9C;
      --light2: #D6EAF8;
      --accent1: #1ABC9C;
      --accent2: #27AE60;
      --accent3: #E74C3C;
      --accent4: #F1C40F;
      --accent5: #5DADE2;
      --accent6: #EC7063;
      --hyperlink: #0070C0;
      --followedLink: #002060;
      
      --border-radius: 0.75rem;
      --transition-speed: 0.3s;
    }
    
    body {
      font-family: 'Roboto', sans-serif;
      background-color: var(--dark1);
      color: var(--light1);
      min-height: 100vh;
      display: flex;
      flex-direction: column;
      overflow-x: hidden;
    }
    
    h1, h2, h3, h4, h5, h6 {
      font-family: 'Montserrat', sans-serif;
      font-weight: 700;
    }
    
    .mono {
      font-family: 'Roboto Mono', monospace;
    }
    
    a {
      color: var(--hyperlink);
      text-decoration: none;
      transition: color var(--transition-speed) ease;
    }
    
    a:hover {
      color: var(--accent5);
    }
    
    a:visited {
      color: var(--followedLink);
    }
    
    .container {
      width: 100%;
      max-width: 1400px;
      margin: 0 auto;
      padding: 0 1rem;
    }
    
    /* Button Styles */
    .btn {
      display: inline-flex;
      align-items: center;
      justify-content: center;
      padding: 0.5rem 1rem;
      border-radius: 0.375rem;
      font-weight: 500;
      cursor: pointer;
      transition: all var(--transition-speed) ease;
      border: none;
      outline: none;
    }
    
    .btn-primary {
      background-color: var(--accent1);
      color: var(--light1);
    }
    
    .btn-primary:hover {
      background-color: var(--accent2);
    }
    
    .btn-outline {
      background-color: transparent;
      border: 1px solid var(--accent1);
      color: var(--accent1);
    }
    
    .btn-outline:hover {
      background-color: var(--accent1);
      color: var(--light1);
    }
    
    .btn-outline.active {
      background-color: var(--accent1);
      color: var(--light1);
    }
    
    .btn-outline.waste {
      border-color: var(--accent3);
      color: var(--accent3);
    }
    
    .btn-outline.waste:hover, .btn-outline.waste.active {
      background-color: var(--accent3);
      color: var(--light1);
    }
    
    .btn-outline.marine {
      border-color: var(--accent5);
      color: var(--accent5);
    }
    
    .btn-outline.marine:hover, .btn-outline.marine.active {
      background-color: var(--accent5);
      color: var(--light1);
    }
    
    .btn-icon {
      width: 2.5rem;
      height: 2.5rem;
      padding: 0;
      border-radius: 50%;
      display: inline-flex;
      align-items: center;
      justify-content: center;
    }
    
    .btn-block {
      display: block;
      width: 100%;
    }
    
    .btn:disabled {
      opacity: 0.7;
      cursor: not-allowed;
    }
    
    /* Layout Components */
    .header {
      background-color: var(--dark1);
      border-bottom: 1px solid rgba(26, 188, 156, 0.3);
      padding: 1rem;
    }
    
    .header-content {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: space-between;
    }
    
    .logo {
      margin-bottom: 1rem;
    }
    
    .logo-text {
      font-size: 1.75rem;
    }
    
    .logo-primary {
      color: var(--accent1);
    }
    
    .logo-secondary {
      color: var(--light1);
    }
    
    .logo-tertiary {
      color: var(--accent5);
      font-size: 1.25rem;
      margin-left: 0.5rem;
    }
    
    .tab-group {
      display: flex;
      gap: 0.5rem;
    }
    
    .main-content {
      flex-grow: 1;
      padding: 1rem;
    }
    
    .footer {
      background-color: var(--dark1);
      border-top: 1px solid rgba(26, 188, 156, 0.3);
      padding: 1rem;
    }
    
    .footer-content {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: space-between;
      text-align: center;
    }
    
    .footer-text {
      color: rgba(214, 234, 248, 0.6);
      font-size: 0.875rem;
      margin-bottom: 0.5rem;
    }
    
    .footer-links {
      display: flex;
      gap: 1rem;
    }
    
    /* Card and Panel Styles */
    .card {
      background-color: rgba(44, 62, 80, 0.5);
      backdrop-filter: blur(8px);
      border-radius: var(--border-radius);
      border: 1px solid rgba(26, 188, 156, 0.2);
      padding: 1.5rem;
      margin-bottom: 1.5rem;
    }
    
    .card-title {
      font-size: 1.5rem;
      color: var(--accent1);
      margin-bottom: 1rem;
    }
    
    .upload-area {
      background-color: rgba(44, 62, 80, 0.7);
      border-radius: 0.75rem;
      padding: 1.5rem;
      margin-bottom: 1rem;
      border: 1px dashed rgba(26, 188, 156, 0.4);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      cursor: pointer;
      transition: border-color var(--transition-speed) ease;
    }
    
    .upload-area:hover {
      border-color: var(--accent1);
    }
    
    .upload-icon {
      width: 3rem;
      height: 3rem;
      color: var(--accent1);
      margin-bottom: 1rem;
    }
    
    .upload-text {
      text-align: center;
      margin-bottom: 0.5rem;
    }
    
    .upload-subtext {
      color: rgba(214, 234, 248, 0.6);
      font-size: 0.875rem;
      text-align: center;
      margin-bottom: 1rem;
    }
    
    /* Status Indicators */
    .status-item {
      margin-bottom: 1rem;
    }
    
    .status-header {
      display: flex;
      justify-content: space-between;
      margin-bottom: 0.25rem;
    }
    
    .status-online {
      color: var(--accent2);
    }
    
    .status-warning {
      color: var(--accent4);
    }
    
    .status-error {
      color: var(--accent3);
    }
    
    .progress-bar {
      width: 100%;
      height: 0.5rem;
      background-color: rgba(240, 248, 255, 0.1);
      border-radius: 9999px;
      overflow: hidden;
    }
    
    .progress-fill {
      height: 100%;
      border-radius: 9999px;
      transition: width var(--transition-speed) ease;
    }
    
    .progress-fill-success {
      background-color: var(--accent2);
    }
    
    .progress-fill-warning {
      background-color: var(--accent4);
    }
    
    .progress-fill-info {
      background-color: var(--accent5);
    }
    
    /* Results Grid */
    .results-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 1.5rem;
    }
    
    .results-count {
      color: rgba(214, 234, 248, 0.6);
      font-size: 0.875rem;
    }
    
    .results-grid {
      display: grid;
      grid-template-columns: 1fr;
      gap: 1rem;
    }
    
    .waste-item {
      background-color: rgba(44, 62, 80, 0.7);
      border-radius: 0.75rem;
      overflow: hidden;
      border: 1px solid rgba(26, 188, 156, 0.2);
      transition: border-color var(--transition-speed) ease;
      cursor: pointer;
    }
    
    .waste-item:hover {
      border-color: rgba(26, 188, 156, 0.6);
    }
    
    .waste-item-image {
      position: relative;
      height: 12rem;
    }
    
    .waste-item-image img {
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
    
    .confidence-badge {
      position: absolute;
      top: 0.5rem;
      right: 0.5rem;
      background-color: rgba(44, 62, 80, 0.8);
      color: var(--light1);
      font-size: 0.75rem;
      padding: 0.25rem 0.5rem;
      border-radius: 9999px;
    }
    
    .type-badge {
      position: absolute;
      bottom: 0.5rem;
      left: 0.5rem;
      font-size: 0.75rem;
      padding: 0.25rem 0.5rem;
      border-radius: 9999px;
    }
    
    .type-badge.waste {
      background-color: rgba(231, 76, 60, 0.25);
      color: var(--accent3);
    }
    
    .type-badge.marine {
      background-color: rgba(93, 173, 226, 0.25);
      color: var(--accent5);
    }
    
    .waste-item-content {
      padding: 1rem;
    }
    
    .waste-item-header {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }
    
    .waste-item-title {
      font-size: 1.125rem;
      color: var(--light1);
    }
    
    .info-icon {
      color: var(--accent1);
      opacity: 0.6;
      transition: opacity var(--transition-speed) ease;
    }
    
    .waste-item:hover .info-icon {
      opacity: 1;
    }
    
    .accuracy-label {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-bottom: 0.25rem;
      margin-top: 0.5rem;
    }
    
    .accuracy-text {
      color: rgba(214, 234, 248, 0.8);
      font-size: 0.875rem;
    }
    
    .accuracy-value {
      font-size: 0.875rem;
    }
    
    /* Info Panel */
    .info-panel {
      position: fixed;
      inset: 0;
      background-color: rgba(44, 62, 80, 0.8);
      backdrop-filter: blur(8px);
      z-index: 50;
      display: flex;
      justify-content: flex-end;
      visibility: hidden;
      opacity: 0;
      transition: opacity var(--transition-speed) ease;
    }
    
    .info-panel.active {
      visibility: visible;
      opacity: 1;
    }
    
    .info-panel-content {
      width: 100%;
      max-width: 24rem;
      background-color: var(--dark1);
      border-left: 1px solid rgba(26, 188, 156, 0.3);
      height: 100%;
      overflow-y: auto;
      transform: translateX(100%);
      transition: transform var(--transition-speed) ease;
    }
    
    .info-panel.active .info-panel-content {
      transform: translateX(0);
    }
    
    .info-panel-header {
      position: sticky;
      top: 0;
      background-color: var(--dark1);
      border-bottom: 1px solid rgba(26, 188, 156, 0.3);
      padding: 1rem;
      display: flex;
      justify-content: space-between;
      align-items: center;
      z-index: 10;
    }
    
    .info-panel-title {
      font-size: 1.25rem;
      color: var(--light1);
    }
    
    .info-panel-body {
      padding: 1.5rem;
    }
    
    .info-panel-image {
      width: 100%;
      height: 16rem;
      object-fit: cover;
      border-radius: 0.75rem;
      margin-bottom: 1rem;
    }
    
    .info-panel-name {
      font-size: 1.5rem;
      color: var(--light1);
      margin-bottom: 0.5rem;
    }
    
    .badge-container {
      display: flex;
      margin-bottom: 1rem;
    }
    
    .badge {
      display: flex;
      align-items: center;
      font-size: 0.875rem;
      font-weight: 500;
      border-radius: 9999px;
      padding: 0.25rem 0.75rem;
      margin-right: 0.5rem;
    }
    
    .badge-icon {
      margin-right: 0.25rem;
    }
    
    .badge.waste {
      background-color: rgba(231, 76, 60, 0.125);
      color: var(--accent3);
    }
    
    .badge.marine {
      background-color: rgba(93, 173, 226, 0.125);
      color: var(--accent5);
    }
    
    .badge.confidence-high {
      background-color: rgba(39, 174, 96, 0.125);
      color: var(--accent2);
    }
    
    .badge.confidence-medium {
      background-color: rgba(241, 196, 15, 0.125);
      color: var(--accent4);
    }
    
    .section-title {
      font-size: 1.125rem;
      color: var(--accent1);
      margin-bottom: 0.75rem;
      margin-top: 1.5rem;
    }
    
    .section-text {
      color: var(--light2);
      margin-bottom: 1rem;
    }
    
    .stats-grid {
      display: grid;
      grid-template-columns: repeat(3, 1fr);
      gap: 1rem;
      margin-bottom: 0.5rem;
    }
    
    .stat-box {
      background-color: rgba(44, 62, 80, 0.7);
      border-radius: 0.5rem;
      padding: 0.75rem;
      text-align: center;
    }
    
    .stat-icon {
      display: flex;
      justify-content: center;
      margin-bottom: 0.5rem;
    }
    
    .stat-label {
      font-size: 0.75rem;
      color: rgba(214, 234, 248, 0.8);
    }
    
    .stat-value {
      font-weight: 500;
    }
    
    .stat-value.positive {
      color: var(--accent2);
    }
    
    .stat-value.negative {
      color: var(--accent3);
    }
    
    .stat-value.warning {
      color: var(--accent4);
    }
    
    .recommendation-box {
      background-color: rgba(26, 188, 156, 0.1);
      border-radius: 0.75rem;
      padding: 1rem;
    }
    
    .conservation-box {
      background-color: rgba(93, 173, 226, 0.1);
      border-radius: 0.75rem;
      padding: 1rem;
    }
    
    /* Loading Screen */
    .loading-screen {
      position: fixed;
      inset: 0;
      background-color: var(--dark1);
      z-index: 100;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      transition: opacity 0.5s ease;
    }
    
    .loading-screen.fade-out {
      opacity: 0;
      pointer-events: none;
    }
    
    .loading-content {
      width: 100%;
      max-width: 28rem;
      padding: 0 1rem;
      text-align: center;
    }
    
    .loading-logo {
      margin-bottom: 2rem;
    }
    
    .loading-logo-text {
      font-size: 2.5rem;
    }
    
    .loading-spinner {
      position: relative;
      width: 6rem;
      height: 6rem;
      margin: 0 auto 2rem;
    }
    
    .spinner-circle {
      width: 100%;
      height: 100%;
      border: 0.25rem solid transparent;
      border-top-color: var(--accent1);
      border-radius: 50%;
      animation: spin 2s linear infinite;
    }
    
    .spinner-inner {
      position: absolute;
      inset: 0;
      display: flex;
      align-items: center;
      justify-content: center;
      margin: 1rem;
      background-color: var(--dark1);
      border-radius: 50%;
    }
    
    .spinner-text {
      font-size: 1.5rem;
      font-weight: bold;
      color: var(--accent1);
    }
    
    .loading-progress {
      width: 100%;
      height: 0.5rem;
      background-color: rgba(240, 248, 255, 0.2);
      border-radius: 9999px;
      overflow: hidden;
      margin-bottom: 1rem;
    }
    
    .loading-progress-fill {
      height: 100%;
      background: linear-gradient(to right, var(--accent1), var(--accent5));
      border-radius: 9999px;
      transition: width 0.3s ease;
    }
    
    .loading-stage {
      color: var(--light2);
      font-family: 'Roboto Mono', monospace;
      margin-bottom: 0.5rem;
    }
    
    .loading-subtext {
      color: rgba(214, 234, 248, 0.6);
      font-size: 0.875rem;
    }
    
    .loading-footer {
      position: absolute;
      bottom: 1rem;
      left: 0;
      right: 0;
      text-align: center;
      color: rgba(214, 234, 248, 0.4);
      font-size: 0.75rem;
    }
    
    /* Processing State */
    .processing-overlay {
      position: absolute;
      inset: 0;
      background-color: rgba(44, 62, 80, 0.8);
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      z-index: 10;
      border-radius: 0.75rem;
    }
    
    .processing-spinner {
      width: 4rem;
      height: 4rem;
      color: var(--accent1);
      margin-bottom: 1rem;
      animation: spin 3s linear infinite;
    }
    
    .processing-text {
      color: var(--light1);
      font-family: 'Montserrat', sans-serif;
    }
    
    /* Animations */
    @keyframes spin {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(360deg);
      }
    }
    
    /* Responsive Styles */
    @media (min-width: 768px) {
      .header-content, .footer-content {
        flex-direction: row;
      }
      
      .logo {
        margin-bottom: 0;
      }
      
      .logo-text {
        font-size: 2rem;
      }
      
      .results-grid {
        grid-template-columns: repeat(2, 1fr);
      }
      
      .footer-text {
        margin-bottom: 0;
      }
    }
    
    @media (min-width: 1024px) {
      .main-grid {
        display: grid;
        grid-template-columns: 1fr 2fr;
        gap: 1.5rem;
      }
      
      .results-grid {
        grid-template-columns: repeat(2, 1fr);
      }
    }
    
    /* Utility Classes */
    .hidden {
      display: none;
    }
    
    .flex {
      display: flex;
    }
    
    .items-center {
      align-items: center;
    }
    
    .justify-center {
      justify-content: center;
    }
    
    .h-64 {
      height: 16rem;
    }
    
    .text-center {
      text-align: center;
    }
  </style>
</head>
<body>
  <!-- Loading Screen -->
  <div id="loadingScreen" class="loading-screen">
    <div class="loading-content">
      <div class="loading-logo">
        <h1 class="loading-logo-text">
          <span class="logo-primary">OCEAN</span><span class="logo-secondary">GUARD</span>
        </h1>
        <p class="text-light2">AI Waste Recognition System</p>
      </div>
      
      <div class="loading-spinner">
        <div class="spinner-circle"></div>
        <div class="spinner-inner">
          <span id="loadingProgress" class="spinner-text">0%</span>
        </div>
      </div>
      
      <div class="loading-progress">
        <div id="loadingProgressBar" class="loading-progress-fill" style="width: 0%"></div>
      </div>
      
      <p id="loadingStage" class="loading-stage">Initializing AI Systems</p>
      <p class="loading-subtext">Please wait while the system initializes...</p>
    </div>
    
    <div class="loading-footer">
      <p>© 2025 OceanGuard AI • Marine Conservation Initiative</p>
    </div>
  </div>

  <!-- Main Application -->
  <header class="header">
    <div class="container header-content">
      <div class="logo">
        <h1 class="logo-text">
          <span class="logo-primary">OCEAN</span><span class="logo-secondary">GUARD</span>
          <span class="logo-tertiary">AI Waste Recognition</span>
        </h1>
      </div>
      
      <div class="tab-group">
        <button id="tabAll" class="btn btn-outline active">All Items</button>
        <button id="tabWaste" class="btn btn-outline waste">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 0.5rem;">
            <path d="M3 6h18"></path>
            <path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path>
            <path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>
          </svg>
          Waste
        </button>
        <button id="tabMarine" class="btn btn-outline marine">
          <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 0.5rem;">
            <path d="M22 7h-5.3a2 2 0 0 0-1.6.9l-.7 1a2 2 0 0 1-1.6.9H8.8a2 2 0 0 1-1.6-.9l-.7-1a2 2 0 0 0-1.6-.9H2"></path>
            <path d="M22 11h-5.3a2 2 0 0 0-1.6.9l-.7 1a2 2 0 0 1-1.6.9H8.8a2 2 0 0 1-1.6-.9l-.7-1a2 2 0 0 0-1.6-.9H2"></path>
            <path d="M22 15h-5.3a2 2 0 0 0-1.6.9l-.7 1a2 2 0 0 1-1.6.9H8.8a2 2 0 0 1-1.6-.9l-.7-1a2 2 0 0 0-1.6-.9H2"></path>
            <path d="M16 3l-4 4-4-4"></path>
            <path d="M16 21l-4-4-4 4"></path>
          </svg>
          Marine Life
        </button>
      </div>
    </div>
  </header>
  
  <main class="main-content">
    <div class="container main-grid">
      <!-- Left Panel - Upload & Process -->
      <div>
        <div class="card">
          <h2 class="card-title">Image Analysis</h2>
          
          <div id="uploadArea" class="upload-area">
            <svg class="upload-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4"></path>
              <polyline points="17 8 12 3 7 8"></polyline>
              <line x1="12" y1="3" x2="12" y2="15"></line>
            </svg>
            <p class="upload-text">Drag & drop image here</p>
            <p class="upload-subtext">or click to browse</p>
            <button class="btn btn-primary">Upload Image</button>
          </div>
          
          <button id="processBtn" class="btn btn-primary btn-block">Analyze Image</button>
        </div>
        
        <div class="card">
          <h2 class="card-title">System Status</h2>
          
          <div class="status-item">
            <div class="status-header">
              <span>AI Model</span>
              <span class="mono status-online">Online</span>
            </div>
            <div class="progress-bar">
              <div class="progress-fill progress-fill-success" style="width: 100%"></div>
            </div>
          </div>
          
          <div class="status-item">
            <div class="status-header">
              <span>Database</span>
              <span class="mono status-online">Connected</span>
            </div>
            <div class="progress-bar">
              <div class="progress-fill progress-fill-success" style="width: 100%"></div>
            </div>
          </div>
          
          <div class="status-item">
            <div class="status-header">
              <span>API</span>
              <span class="mono status-warning">Stable</span>
            </div>
            <div class="progress-bar">
              <div class="progress-fill progress-fill-warning" style="width: 85%"></div>
            </div>
          </div>
          
          <div class="status-item">
            <div class="status-header">
              <span>Memory Usage</span>
              <span class="mono">42%</span>
            </div>
            <div class="progress-bar">
              <div class="progress-fill progress-fill-info" style="width: 42%"></div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Right Panel - Results -->
      <div class="card">
        <div class="results-header">
          <h2 class="card-title">Recognition Results</h2>
          <div id="resultsCount" class="results-count">5 items detected</div>
        </div>
        
        <div id="processingOverlay" class="hidden">
          <div class="h-64 flex items-center justify-center">
            <div class="text-center">
              <svg class="processing-spinner" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                <path d="M21 12a9 9 0 1 1-6.219-8.56"></path>
              </svg>
              <p class="processing-text">Processing Image...</p>
            </div>
          </div>
        </div>
        
        <div id="resultsGrid" class="results-grid">
          <!-- Results will be dynamically populated here -->
        </div>
      </div>
    </div>
  </main>
  
  <footer class="footer">
    <div class="container footer-content">
      <p class="footer-text">© 2025 OceanGuard AI • Marine Conservation Initiative</p>
      <div class="footer-links">
        <a href="#">Documentation</a>
        <a href="#">About</a>
        <a href="#">Contact</a>
      </div>
    </div>
  </footer>
  
  <!-- Info Panel (Slide-in) -->
  <div id="infoPanel" class="info-panel">
    <div class="info-panel-content">
      <div class="info-panel-header">
        <h3 class="info-panel-title">Item Details</h3>
        <button id="closeInfoPanel" class="btn btn-icon">
          <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
            <line x1="18" y1="6" x2="6" y2="18"></line>
            <line x1="6" y1="6" x2="18" y2="18"></line>
          </svg>
        </button>
      </div>
      
      <div id="infoPanelContent" class="info-panel-body">
        <!-- Info panel content will be dynamically populated here -->
      </div>
    </div>
  </div>
  
  <script>
    // Sample data for waste items
    const wasteItems = [
      {
        id: 1,
        name: "Plastic Bottle",
        image: "https://placehold.co/600x400/2C3E50/FFFFFF?text=Plastic+Bottle",
        confidence: 94,
        type: "waste",
        recyclable: true,
        biodegradable: false,
        toxicity: "Medium",
        impact: "Takes up to 450 years to decompose in the ocean, harming marine life through ingestion and entanglement."
      },
      {
        id: 2,
        name: "Fishing Net",
        image: "https://placehold.co/600x400/2C3E50/FFFFFF?text=Fishing+Net",
        confidence: 89,
        type: "waste",
        recyclable: true,
        biodegradable: false,
        toxicity: "High",
        impact: "Ghost fishing nets continue to trap and kill marine life for years after being discarded."
      },
      {
        id: 3,
        name: "Aluminum Can",
        image: "https://placehold.co/600x400/2C3E50/FFFFFF?text=Aluminum+Can",
        confidence: 97,
        type: "waste",
        recyclable: true,
        biodegradable: false,
        toxicity: "Low",
        impact: "Can take 200+ years to decompose and may release metals into the marine environment."
      },
      {
        id: 4,
        name: "Coral Formation",
        image: "https://placehold.co/600x400/2C3E50/FFFFFF?text=Coral+Formation",
        confidence: 92,
        type: "marine",
        protected: true,
        ecosystem: "Reef",
        status: "Endangered",
        info: "Coral reefs support 25% of all marine species while covering less than 1% of the ocean floor."
      },
      {
        id: 5,
        name: "Plastic Bag",
        image: "https://placehold.co/600x400/2C3E50/FFFFFF?text=Plastic+Bag",
        confidence: 91,
        type: "waste",
        recyclable: true,
        biodegradable: false,
        toxicity: "High",
        impact: "Often mistaken for jellyfish by sea turtles, causing fatal blockages when ingested."
      }
    ];
    
    // DOM Elements
    const loadingScreen = document.getElementById('loadingScreen');
    const loadingProgress = document.getElementById('loadingProgress');
    const loadingProgressBar = document.getElementById('loadingProgressBar');
    const loadingStage = document.getElementById('loadingStage');
    const tabAll = document.getElementById('tabAll');
    const tabWaste = document.getElementById('tabWaste');
    const tabMarine = document.getElementById('tabMarine');
    const resultsGrid = document.getElementById('resultsGrid');
    const resultsCount = document.getElementById('resultsCount');
    const processBtn = document.getElementById('processBtn');
    const processingOverlay = document.getElementById('processingOverlay');
    const infoPanel = document.getElementById('infoPanel');
    const infoPanelContent = document.getElementById('infoPanelContent');
    const closeInfoPanel = document.getElementById('closeInfoPanel');
    
    // State
    let activeTab = 'all';
    let isProcessing = false;
    
    // Initialize the application
    function init() {
      simulateLoading();
      renderResults();
      setupEventListeners();
    }
    
    // Simulate loading screen
    function simulateLoading() {
      const loadingStages = [
        "Initializing AI Systems",
        "Loading Neural Networks",
        "Calibrating Ocean Waste Detection",
        "Connecting to Marine Database",
        "Finalizing System Preparation"
      ];
      
      let progress = 0;
      const interval = setInterval(() => {
        progress += 1;
        
        // Update loading stage at specific progress points
        if (progress === 20) loadingStage.textContent = loadingStages[1];
        if (progress === 40) loadingStage.textContent = loadingStages[2];
        if (progress === 60) loadingStage.textContent = loadingStages[3];
        if (progress === 80) loadingStage.textContent = loadingStages[4];
        
        loadingProgress.textContent = `${progress}%`;
        loadingProgressBar.style.width = `${progress}%`;
        
        if (progress >= 100) {
          clearInterval(interval);
          setTimeout(() => {
            loadingScreen.classList.add('fade-out');
            setTimeout(() => {
              loadingScreen.style.display = 'none';
            }, 500);
          }, 500);
        }
      }, 30);
    }
    
    // Set up event listeners
    function setupEventListeners() {
      // Tab switching
      tabAll.addEventListener('click', () => switchTab('all'));
      tabWaste.addEventListener('click', () => switchTab('waste'));
      tabMarine.addEventListener('click', () => switchTab('marine'));
      
      // Process button
      processBtn.addEventListener('click', handleProcessImage);
      
      // Close info panel
      closeInfoPanel.addEventListener('click', () => {
        infoPanel.classList.remove('active');
      });
    }
    
    // Switch between tabs
    function switchTab(tab) {
      activeTab = tab;
      
      // Update active tab styling
      tabAll.classList.remove('active');
      tabWaste.classList.remove('active');
      tabMarine.classList.remove('active');
      
      if (tab === 'all') tabAll.classList.add('active');
      if (tab === 'waste') tabWaste.classList.add('active');
      if (tab === 'marine') tabMarine.classList.add('active');
      
      renderResults();
    }
    
    // Handle process image button click
    function handleProcessImage() {
      if (isProcessing) return;
      
      isProcessing = true;
      processBtn.disabled = true;
      processBtn.innerHTML = `
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" style="margin-right: 0.5rem; animation: spin 2s linear infinite;">
          <path d="M21 12a9 9 0 1 1-6.219-8.56"></path>
        </svg>
        Processing...
      `;
      
      processingOverlay.classList.remove('hidden');
      
      // Simulate processing time
      setTimeout(() => {
        isProcessing = false;
        processBtn.disabled = false;
        processBtn.innerHTML = 'Analyze Image';
        processingOverlay.classList.add('hidden');
      }, 2000);
    }
    
    // Render results based on active tab
    function renderResults() {
      const filteredItems = activeTab === 'all' 
        ? wasteItems 
        : wasteItems.filter(item => item.type === activeTab);
      
      resultsCount.textContent = `${filteredItems.length} items detected`;
      resultsGrid.innerHTML = '';
      
      filteredItems.forEach(item => {
        const itemElement = createWasteItemElement(item);
        resultsGrid.appendChild(itemElement);
      });
    }
    
    // Create waste item element
    function createWasteItemElement(item) {
      const itemElement = document.createElement('div');
      itemElement.className = 'waste-item';
      itemElement.addEventListener('click', () => showItemDetails(item));
      
      // Determine confidence color
      const confidenceColor = item.confidence > 90 
        ? 'var(--accent2)' 
        : item.confidence > 75 
          ? 'var(--accent4)' 
          : 'var(--accent3)';
      
      itemElement.innerHTML = `
        <div class="waste-item-image">
          <img src="${item.image}" alt="${item.name}">
          <div class="confidence-badge">${item.confidence}% Confidence</div>
          <div class="type-badge ${item.type}">${item.type === 'waste' ? 'Waste' : 'Marine Life'}</div>
        </div>
        <div class="waste-item-content">
          <div class="waste-item-header">
            <h3 class="waste-item-title">${item.name}</h3>
            <svg class="info-icon" xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              <circle cx="12" cy="12" r="10"></circle>
              <line x1="12" y1="16" x2="12" y2="12"></line>
              <line x1="12" y1="8" x2="12.01" y2="8"></line>
            </svg>
          </div>
          <div class="accuracy-label">
            <span class="accuracy-text">Recognition Accuracy</span>
            <span class="accuracy-value mono">${item.confidence}%</span>
          </div>
          <div class="progress-bar">
            <div class="progress-fill" style="width: ${item.confidence}%; background-color: ${confidenceColor}"></div>
          </div>
        </div>
      `;
      
      return itemElement;
    }
    
    // Show item details in the info panel
    function showItemDetails(item) {
      const isWaste = item.type === 'waste';
      
      // Determine confidence badge class
      const confidenceBadgeClass = item.confidence > 90 
        ? 'confidence-high' 
        : 'confidence-medium';
      
      let content = `
        <img src="${item.image}" alt="${item.name}" class="info-panel-image">
        <h3 class="info-panel-name">${item.name}</h3>
        
        <div class="badge-container">
          <div class="badge ${item.type}">
            <svg class="badge-icon" xmlns="http://www.w3.org/2000/svg" width="14" height="14" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
              ${isWaste 
                ? '<path d="M3 6h18"></path><path d="M19 6v14c0 1-1 2-2 2H7c-1 0-2-1-2-2V6"></path><path d="M8 6V4c0-1 1-2 2-2h4c1 0 2 1 2 2v2"></path>'
                : '<path d="M22 7h-5.3a2 2 0 0 0-1.6.9l-.7 1a2 2 0 0 1-1.6.9H8.8a2 2 0 0 1-1.6-.9l-.7-1a2 2 0 0 0-1.6-.9H2"></path><path d="M22 11h-5.3a2 2 0 0 0-1.6.9l-.7 1a2 2 0 0 1-1.6.9H8.8a2 2 0 0 1-1.6-.9l-.7-1a2 2 0 0 0-1.6-.9H2"></path><path d="M22 15h-5.3a2 2 0 0 0-1.6.9l-.7 1a2 2 0 0 1-1.6.9H8.8a2 2 0 0 1-1.6-.9l-.7-1a2 2 0 0 0-1.6-.9H2"></path>'
              }
            </svg>
            ${isWaste ? 'Ocean Waste' : 'Marine Life'}
          </div>
          
          <div class="badge ${confidenceBadgeClass}">
            ${item.confidence}% Confidence
          </div>
        </div>
      `;
      
      if (isWaste) {
        content += `
          <h4 class="section-title">Environmental Impact</h4>
          <p class="section-text">${item.impact}</p>
          
          <div class="stats-grid">
            <div class="stat-box">
              <div class="stat-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="${item.recyclable ? 'var(--accent2)' : 'var(--accent3)'}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M7 19H4.815a1.83 1.83 0 0 1-1.57-.881 1.785 1.785 0 0 1-.004-1.784L7.196 9.5"></path>
                  <path d="M11 19h8.203a1.83 1.83 0 0 0 1.556-.89 1.784 1.784 0 0 0 0-1.775l-1.226-2.12"></path>
                  <path d="m14 16-3 3 3 3"></path>
                  <path d="M8.293 13.596 7.196 9.5 3.1 10.598"></path>
                  <path d="m9.344 5.811 1.093-1.892A1.83 1.83 0 0 1 11.985 3a1.784 1.784 0 0 1 1.546.888l3.943 6.843"></path>
                  <path d="m13.378 9.633 4.096 1.098 1.097-4.096"></path>
                </svg>
              </div>
              <div class="stat-label">Recyclable</div>
              <div class="stat-value ${item.recyclable ? 'positive' : 'negative'}">${item.recyclable ? 'Yes' : 'No'}</div>
            </div>
            
            <div class="stat-box">
              <div class="stat-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="${item.biodegradable ? 'var(--accent2)' : 'var(--accent3)'}" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                  <line x1="12" y1="9" x2="12" y2="13"></line>
                  <line x1="12" y1="17" x2="12.01" y2="17"></line>
                </svg>
              </div>
              <div class="stat-label">Biodegradable</div>
              <div class="stat-value ${item.biodegradable ? 'positive' : 'negative'}">${item.biodegradable ? 'Yes' : 'No'}</div>
            </div>
            
            <div class="stat-box">
              <div class="stat-icon">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="${
                  item.toxicity === 'Low' 
                    ? 'var(--accent2)' 
                    : item.toxicity === 'Medium' 
                      ? 'var(--accent4)' 
                      : 'var(--accent3)'
                }" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M10.29 3.86L1.82 18a2 2 0 0 0 1.71 3h16.94a2 2 0 0 0 1.71-3L13.71 3.86a2 2 0 0 0-3.42 0z"></path>
                  <line x1="12" y1="9" x2="12" y2="13"></line>
                  <line x1="12" y1="17" x2="12.01" y2="17"></line>
                </svg>
              </div>
              <div class="stat-label">Toxicity</div>
              <div class="stat-value ${
                item.toxicity === 'Low' 
                  ? 'positive' 
                  : item.toxicity === 'Medium' 
                    ? 'warning' 
                    : 'negative'
              }">${item.toxicity}</div>
            </div>
          </div>
          
          <h4 class="section-title">Recommended Action</h4>
          <div class="recommendation-box">
            <p>This item should be properly collected and recycled to prevent further ocean pollution.</p>
          </div>
        `;
      } else {
        content += `
          <h4 class="section-title">Species Information</h4>
          <p class="section-text">${item.info}</p>
          
          <div class="stats-grid">
            <div class="stat-box">
              <div class="stat-label">Protected Status</div>
              <div class="stat-value ${item.protected ? 'negative' : 'positive'}">${item.protected ? 'Protected' : 'Common'}</div>
            </div>
            
            <div class="stat-box">
              <div class="stat-label">Ecosystem</div>
              <div class="stat-value" style="color: var(--accent5)">${item.ecosystem}</div>
            </div>
            
            <div class="stat-box">
              <div class="stat-label">Status</div>
              <div class="stat-value ${
                item.status === 'Endangered' 
                  ? 'negative' 
                  : item.status === 'Vulnerable' 
                    ? 'warning' 
                    : 'positive'
              }">${item.status}</div>
            </div>
          </div>
          
          <h4 class="section-title">Conservation Note</h4>
          <div class="conservation-box">
            <p>This is a natural marine species that should be protected and preserved in its natural habitat.</p>
          </div>
        `;
      }
      
      content += `
        <div style="margin-top: 1.5rem;">
          <button class="btn btn-primary btn-block">Add to Report</button>
        </div>
      `;
      
      infoPanelContent.innerHTML = content;
      infoPanel.classList.add('active');
    }
    
    // Initialize the application when the DOM is loaded
    document.addEventListener('DOMContentLoaded', init);
  </script>
</body>
</html>